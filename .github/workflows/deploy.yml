name: 🎯 Teclit CI/CD Process

on:
  push:
    branches:
      - develop
      - staging
      - master
  pull_request:
    branches:
      - develop
      - staging
      - master

jobs:

  # Étape 1 : Construire l'application Angular
  build:
    name: ⚙️ Build Angular App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Angular Project (Production)
        run: npm run build --configuration=production

  # Étape 2 : Tests (linting + tests unitaires)
  test:
    name: ✅ Run Tests
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run Unit Tests
        run: npm run test -- --browsers=ChromeHeadless --watch=false --code-coverage

  # Étape 3 : Construire et pousser l'image Docker sur Docker Hub
  docker-build-push:
    name: 🐳 Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Define Docker Image Tag
        id: set-tag
        run: |
          if [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
            echo "TAG=dev" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
            echo "TAG=staging" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            echo "TAG=prod" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:${{ steps.set-tag.outputs.TAG }}
            ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:${{ github.sha }}

  # Étape 4 : Déployer vers Développement
  deploy-dev:
    name: 🚀 Deploy to Development
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Deploy Application (Development)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ${{ secrets.DEV_SERVER_USERNAME }}
          key: ${{ secrets.DEV_SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:dev
            docker stop teclit-app-dev || true
            docker rm teclit-app-dev || true
            docker run -d --name teclit-app-dev -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:dev

  # Étape 5 : Déployer vers Staging
  deploy-staging:
    name: 🚀 Deploy to Staging
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: Deploy Application (Staging)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_SERVER_HOST }}
          username: ${{ secrets.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:staging
            docker stop teclit-app-staging || true
            docker rm teclit-app-staging || true
            docker run -d --name teclit-app-staging -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:staging

  # Étape 6 : Déployer vers Production
  deploy-prod:
    name: 🚀 Deploy to Production
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Deploy Application (Production)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USERNAME }}
          key: ${{ secrets.PROD_SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:prod
            docker stop teclit-app-prod || true
            docker rm teclit-app-prod || true
            docker run -d --name teclit-app-prod -p 80:80 ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:prod

