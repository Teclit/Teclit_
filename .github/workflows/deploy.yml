name: 🎯 Teclit CI/CD Process

on:
  push:
    branches:
      - develop
      - staging
      - master
  pull_request:
    branches:
      - develop
      - staging
      - master

jobs:

  build:
    name: ⚙️ Build Angular App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Angular Project (Production)
        run: npm run build --configuration=production

  test:
    name: ✅ Run Tests
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run Unit Tests
        run: npm run test -- --browsers=ChromeHeadless --watch=false --code-coverage

  docker-build-push:
    name: 🐳 Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Define Docker Image Tag
        id: set-tag
        run: |
          if [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
            echo "TAG=dev" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
            echo "TAG=staging" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            echo "TAG=prod" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:${{ env.TAG }}
            ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:${{ github.sha }}

  deploy:
    name: 🚀 Deploy Application
    needs: docker-build-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:${{ env.TAG }}

            # Stop and remove old container if it exists
            docker ps -a | grep teclit-app-${{ env.TAG }} && docker stop teclit-app-${{ env.TAG }} || true
            docker ps -a | grep teclit-app-${{ env.TAG }} && docker rm teclit-app-${{ env.TAG }} || true

            # Start new container
            docker run -d --name teclit-app-${{ env.TAG }} -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app:${{ env.TAG }}
