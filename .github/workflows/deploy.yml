name: 🎯 Teclit CI/CD Process

on:
  push:
    branches:
      - develop
      - staging
      - master
  pull_request:
    branches:
      - develop
      - staging
      - master

jobs:

  # Step 1: Build the Angular Application
  build:
    name: ⚙️ Build Angular App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Angular Project (Production)
        run: npm run build --configuration=production

  # Step 2: Linting & Unit Tests
  test:
    name: ✅ Run Tests
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run Unit Tests
        run: npm run test -- --browsers=ChromeHeadless --watch=false --code-coverage

  # Step 3: Build & Push Docker Image
  docker-build-push:
    name: 🐳 Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    env:
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/teclit-angular-app

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Image Tag Based on Branch
        id: set-tag
        run: |
          case "${GITHUB_REF#refs/heads/}" in
            develop) echo "TAG=dev" >> $GITHUB_ENV ;;
            staging) echo "TAG=staging" >> $GITHUB_ENV ;;
            master) echo "TAG=prod" >> $GITHUB_ENV ;;
            *) echo "Unknown branch. Skipping deployment." && exit 1 ;;
          esac

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  # Step 4: Deploy to SSH Server
  # Étape 4 : Déploiement sur Vercel (Master-Prod)
  deploy:
    name: 🚀 Deploy to Vercel (Production)
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Production Assets
        run: npm run build --configuration=production

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
